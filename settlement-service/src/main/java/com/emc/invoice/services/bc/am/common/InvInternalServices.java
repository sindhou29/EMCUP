package com.emc.invoice.services.bc.am.common;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.12.redhat-1
 * 2018-07-26T14:50:31.204+08:00
 * Generated source version: 3.1.12.redhat-1
 * 
 */
@WebService(targetNamespace = "/com/emc/invoice/services/bc/am/common/", name = "InvInternalServices")
@XmlSeeAlso({com.oracle.xmlns.adf.svc.types.ObjectFactory.class, com.emc.invoice.services.bc.am.common.types.ObjectFactory.class, sdo.commonj.java.ObjectFactory.class, com.emc.invoice.services.bc.rvo.common.ObjectFactory.class, com.emc.invoice.services.bc.tvo.common.ObjectFactory.class, sdo.commonj.xml.ObjectFactory.class, sdo.commonj.ObjectFactory.class, com.oracle.xmlns.adf.svc.errors.ObjectFactory.class})
public interface InvInternalServices {

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/prepareInvoicesForUI")
    @RequestWrapper(localName = "prepareInvoicesForUI", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PrepareInvoicesForUI")
    @ResponseWrapper(localName = "prepareInvoicesForUIResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PrepareInvoicesForUIResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public java.util.List<com.emc.invoice.services.bc.rvo.common.InvoiceLabelValueTVOSDO> prepareInvoicesForUI(
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String tradingDate,
        @WebParam(name = "invType", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String invType,
        @WebParam(name = "ptpId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String ptpId
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/getBankReconciliationReport")
    @RequestWrapper(localName = "getBankReconciliationReport", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.GetBankReconciliationReport")
    @ResponseWrapper(localName = "getBankReconciliationReportResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.GetBankReconciliationReportResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public java.util.List<com.emc.invoice.services.bc.rvo.common.AuditBRFReportingRVOSDO> getBankReconciliationReport(
        @WebParam(name = "paymentDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String paymentDate
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/exposeEFTGeneration")
    @RequestWrapper(localName = "exposeEFTGeneration", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.ExposeEFTGeneration")
    @ResponseWrapper(localName = "exposeEFTGenerationResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.ExposeEFTGenerationResponse")
    public void exposeEFTGeneration(
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        javax.xml.datatype.XMLGregorianCalendar tradingDate,
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "schemeType", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String schemeType,
        @WebParam(name = "isTestRun", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        boolean isTestRun
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/requestSettlementPdfBytes")
    @RequestWrapper(localName = "requestSettlementPdfBytes", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.RequestSettlementPdfBytes")
    @ResponseWrapper(localName = "requestSettlementPdfBytesResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.RequestSettlementPdfBytesResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public byte[] requestSettlementPdfBytes(
        @WebParam(name = "invType", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String invType,
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String tradingDate,
        @WebParam(name = "ptpId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String ptpId
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/generateADFFile")
    @RequestWrapper(localName = "generateADFFile", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.GenerateADFFile")
    @ResponseWrapper(localName = "generateADFFileResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.GenerateADFFileResponse")
    public void generateADFFile(
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        javax.xml.datatype.XMLGregorianCalendar tradingDate,
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "invoiceType", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String invoiceType,
        @WebParam(name = "isTestRun", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        boolean isTestRun
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/prepareBatchReportForAudit")
    @RequestWrapper(localName = "prepareBatchReportForAudit", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PrepareBatchReportForAudit")
    @ResponseWrapper(localName = "prepareBatchReportForAuditResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PrepareBatchReportForAuditResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public java.util.List<com.emc.invoice.services.bc.tvo.common.BatchReportTVOSDO> prepareBatchReportForAudit(
        @WebParam(name = "startDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String startDate,
        @WebParam(name = "endDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String endDate
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/requestPdfBytes")
    @RequestWrapper(localName = "requestPdfBytes", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.RequestPdfBytes")
    @ResponseWrapper(localName = "requestPdfBytesResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.RequestPdfBytesResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public byte[] requestPdfBytes(
        @WebParam(name = "invType", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String invType,
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String tradingDate,
        @WebParam(name = "ptpId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String ptpId
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/generateBatchReportsData")
    @RequestWrapper(localName = "generateBatchReportsData", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.GenerateBatchReportsData")
    @ResponseWrapper(localName = "generateBatchReportsDataResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.GenerateBatchReportsDataResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public java.lang.String generateBatchReportsData() throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/requestTradeSummaryPdfBytes")
    @RequestWrapper(localName = "requestTradeSummaryPdfBytes", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.RequestTradeSummaryPdfBytes")
    @ResponseWrapper(localName = "requestTradeSummaryPdfBytesResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.RequestTradeSummaryPdfBytesResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public byte[] requestTradeSummaryPdfBytes(
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String tradingDate,
        @WebParam(name = "ptpId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String ptpId,
        @WebParam(name = "stlAccountName", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String stlAccountName
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/preparePenaltyInvoicesForUI")
    @RequestWrapper(localName = "preparePenaltyInvoicesForUI", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PreparePenaltyInvoicesForUI")
    @ResponseWrapper(localName = "preparePenaltyInvoicesForUIResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PreparePenaltyInvoicesForUIResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public java.util.List<com.emc.invoice.services.bc.rvo.common.NemPenaltyInvoicesRVOSDO> preparePenaltyInvoicesForUI(
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String tradingDate,
        @WebParam(name = "invType", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String invType,
        @WebParam(name = "ptpId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String ptpId
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;

    @WebMethod(action = "/com/emc/invoice/services/bc/am/common/prepareBatchReportForUI")
    @RequestWrapper(localName = "prepareBatchReportForUI", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PrepareBatchReportForUI")
    @ResponseWrapper(localName = "prepareBatchReportForUIResponse", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/", className = "com.emc.invoice.services.bc.am.common.types.PrepareBatchReportForUIResponse")
    @WebResult(name = "result", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
    public java.util.List<com.emc.invoice.services.bc.tvo.common.BatchReportTVOSDO> prepareBatchReportForUI(
        @WebParam(name = "runId", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String runId,
        @WebParam(name = "tradingDate", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String tradingDate,
        @WebParam(name = "resultType", targetNamespace = "/com/emc/invoice/services/bc/am/common/types/")
        java.lang.String resultType
    ) throws com.oracle.xmlns.adf.svc.errors.ServiceException;
}
