package com.emc.drcap.penalty.model.bc.am.common;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Map;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.apache.log4j.Logger;

import com.emc.invoice.services.bc.am.common.InvInternalServices_Service;
import com.emc.settlement.common.UtilityFunctions;

import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12.redhat-1
 * 2018-07-27T11:37:11.537+08:00
 * Generated source version: 3.1.12.redhat-1
 * 
 */
@WebServiceClient(name = "PenaltyService", 
                  wsdlLocation = "http://10.1.152.160:7504//penservices/PenaltyService?wsdl",
                  targetNamespace = "/com/emc/drcap/penalty/model/bc/am/common/") 
public class PenaltyService_Service extends Service {

	private static final Logger logger = Logger.getLogger(PenaltyService_Service.class);
    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("/com/emc/drcap/penalty/model/bc/am/common/", "PenaltyService");
    public final static QName PenaltyServiceSoapHttpPort = new QName("/com/emc/drcap/penalty/model/bc/am/common/", "PenaltyServiceSoapHttpPort");
    static {
        URL url = null;
        String penaltyservicesURL = null;
        try {
        	Map<String, String> propertiesMap = UtilityFunctions.getProperties();
        	penaltyservicesURL = propertiesMap.get("penservicesURL");
		    	url = new URL(penaltyservicesURL+"/penservices/PenaltyService?wsdl");
		    	logger.info("Penalty Service URL : " + penaltyservicesURL+"/penservices/PenaltyService?wsdl");
		    	
        	//url = new URL("http://10.1.152.160:7504/penservices/PenaltyService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PenaltyService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", penaltyservicesURL+"/penservices/PenaltyService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public PenaltyService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PenaltyService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PenaltyService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public PenaltyService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public PenaltyService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public PenaltyService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns PenaltyService
     */
    @WebEndpoint(name = "PenaltyServiceSoapHttpPort")
    public PenaltyService getPenaltyServiceSoapHttpPort() {
        return super.getPort(PenaltyServiceSoapHttpPort, PenaltyService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PenaltyService
     */
    @WebEndpoint(name = "PenaltyServiceSoapHttpPort")
    public PenaltyService getPenaltyServiceSoapHttpPort(WebServiceFeature... features) {
        return super.getPort(PenaltyServiceSoapHttpPort, PenaltyService.class, features);
    }

}
